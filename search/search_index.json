{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CORDH Data Harmonisation Group The website outlines modelling choices in relation to diverse entities described in the Consortium's data. The modelling is provided, whenever possible, using CIDOC-CRM. However, in certain cases, other ontologies are used. For each of the described entities, diverse encoding choices were outlined, and a decision about each of them was made. The scope of this document is not to provide a track of this process, but just to present its results. The documentation of the possible modelling and encoding of an entity in RDF can be found in the Annex A . For each entity, as an example of its use, an RDF encoding of a real-world statement is provided. The syntax of the encoding is Turtle, and all the prefix used can be found on http://prefix.cc/ . On the left of the screen, the reader can see the sections of the website. The entry Entities outline the main basic modelling choices with explanations and examples. While the majority of the modelling examples are in the Entities section, for some specific subject, where we deemed that more explanation would be needed, we decided to have some special sections. It is the case of Time , Bibliographic Data and Images . Comments and further explanations can be opened as issues in Github .","title":"Home"},{"location":"#cordh-data-harmonisation-group","text":"The website outlines modelling choices in relation to diverse entities described in the Consortium's data. The modelling is provided, whenever possible, using CIDOC-CRM. However, in certain cases, other ontologies are used. For each of the described entities, diverse encoding choices were outlined, and a decision about each of them was made. The scope of this document is not to provide a track of this process, but just to present its results. The documentation of the possible modelling and encoding of an entity in RDF can be found in the Annex A . For each entity, as an example of its use, an RDF encoding of a real-world statement is provided. The syntax of the encoding is Turtle, and all the prefix used can be found on http://prefix.cc/ . On the left of the screen, the reader can see the sections of the website. The entry Entities outline the main basic modelling choices with explanations and examples. While the majority of the modelling examples are in the Entities section, for some specific subject, where we deemed that more explanation would be needed, we decided to have some special sections. It is the case of Time , Bibliographic Data and Images . Comments and further explanations can be opened as issues in Github .","title":"CORDH Data Harmonisation Group"},{"location":"Annex/","text":"Annex A Discarded Modelling choices Appellation Possible modelling of the appellation are: E21 Person \u2192 P1 is identified by \u2192 E41 Appellation \u2192 P3 has note \u2192 rdfs:Literal E21 Person \u2192 rdfs:Label \u2192 rdfs:Literal E21 Person \u2192 P1 is identified by \u2192 rdfs:Literal E21 Person \u2192 P1 is identified by \u2192 E41 Appellation \u2192 rdfs:label \u2192 rdfs:Literal The main differences between the three is that example 1 treat the appellation not as a literal but as an entity which has a literal. Thus we can express statements about E41 Appellation, such as when it was used, how it come to be, where this form originate and others of such type. The form chosen by I Tatti is the number 3 ( see the code block ). The reason is very practical. There was no need to express statements about the name itself, and the use of rdfs:label is preferable as a system level ( metaphacts ) in respect to crm:P1_is_identified_by . The possibility of adding rdfs:label to each class in CRM was a specification which was modelled as such: xml-dtd rdf:Property rdf:about=\"http://www.w3.org/2000/01/rdf-schema#label\" rdfs:domain rdf:resource=\"E1_CRM_Entity\"/ rdfs:range rdf:resource=\"http://www.w3.org/2000/01/rdf-schema#Literal\"/ /rdf:Property and added to the schema. The result is that each rdfs:label would be a property of crm:E1_CRM_Entity, and subsequently to each of the subclasses of E1. The rationale behind is that crm:E1_CRM_Entity has as a property crm:P1_is_identified_by, which is completely equivalent to rdfs:label. The consequence is the possibility to use rdfs:label instead of crm:P1_is_identified_by for each of the class in CRM 1 2 a crm : E21_Person ; rdfs : label Giovanni da Udine . The form chosen by SARI is the number 1. But on top of property crm:P3_has_note also rdf:value is used. 1 2 3 crm : E21_Person crm : P1_is_identified_by crm : E82_Actor_Appellation . crm : E82_Actor_Appellation crm : P3_has_note Semper, Gottfried . crm : E82_Actor_Appellation rdf : value Semper, Gottfried . Preferred Name Possible modelling of the preferred name are: E21 Person \u2192 L4 has preferred label \u2192 rdfs:Literal E21 Person \u2192 skos:prefLabel \u2192 rdfs:Literal E21 Person \u2192 P3_has_note|rdf:value \u2192 rdfs:Literal The main difference is that the 1 statements is encoded using CIDOC-CRM and CRMDig, while the second use SKOS. The form chosen by I Tatti is the number 2 ( see the code block ). The reason is mainly because it employs SKOS, which we use in other part of the modelling. Moreover SKOS is more used globally. 1 skos : prefLabel Giovanni da Udine . The form chosen by SARI is the number 3 ( see the code block ). On top of having all appellations separately modelled, we attach the preferred one directly to the actor with P3_has_note and rdf:value. 1 2 crm : E21_Person crm : P3_has_note Semper, Gottfried . crm : E21_Person rdf : value Semper, Gottfried . Identifier Digital object can has multiple identifiers which we want to link to. An easy example would be Michelangelo, which has an internal identifier, a page on wikidata with his own identifier, as well as another one on ULAN. We can chose to define them and chose a preferred one. Possible modelling in CRM are: E21 Person \u2192 P48 has preferred identifier \u2192 rdfs:Literal ( see the code block number 1 ) E21 Person \u2192 P1 is identified by \u2192 rdfs:Literal ( see the code block number 2 ) E21 Person \u2192 P1 is identified by \u2192 E42 Identifier \u2192 P3 has note | rdf:value \u2192 rdfs:Literal ( see the code block number 3 ) 1 crm : P1_is_identified_by B00000737 ; 1 crm : P48_has_preferred_identifier A00000737 ; Both form are employed by ITatti The form chosen by SARI is the number 3. 1 2 3 crm : E21_Person crm : P1_is_identified_by crm : E42_Identifier . crm : E42_Identifier crm : P3_has_note d701b57c-41a8-4ded-b411-08bcfdf01682 . crm : E42_Identifier rdf : value d701b57c-41a8-4ded-b411-08bcfdf01682 . Place Note A place is a section of space identified indipendently from its temporal status. They are usually referenced using absolute (WGS, EPSG) or relative (\"top of the mountain\") reference systems. The class SpatialObject, superclass of everything featureor geometry that can have a spatial representation. Place is another important feature we should harmonise. Diverse are the possibilities, both inside and outside CRM. The latter offers an extension called CRMGeo that harmonise CRM with GeoSparql and offer a nice representation of the geographical features with a rich semantics. However the adoption is limited and the learning curve is steep. Other option are offered in CRM, which allow the expression of simple statements about place. The identified mapping options are: E53 Place \u2192 P87 is identified by \u2192 E47 Spatial Coordinates \u2192 rdfs:Label \u2192 rdfs:Literal wgs:SpatialThing\u2192 wgs:lat \u2192 rdfs:Literal / wgs:SpatialThing\u2192 wgs:long \u2192 rdfs:Literal E53 Place\u2192 P87 is identified by \u2192 wgs:Point\u2192 wgs:lat \u2192 rdfs:Literal We will see them in more details E53 Place \u2192 P87 is identified by \u2192 E47 Spatial Coordinates \u2192 rdfs:Label \u2192 rdfs:Literal This mapping actually require the specification of the Type of the Spatial Coordinates we are annotating a place with, such as \"Latitude\" or \"Longitude\". Other options could be \"WGS84\" or other reference system. Entity Relationship Entity Relationship Entity E53 Place P87 is identified by E47 Spatial Coordinates rdfs:Label rdfs:Literal \u2b91 P2 has type rdfs:Literal 1 2 3 4 5 6 7 8 9 10 11 12 a crm : E53_Place ; crm : P87_is_identified_by , . a crm : E47_Spatial_Coordinates ; rdfs : label 11.8818051 ; crm : P2_has_type \u201c Longitude . a crm:E47_Spatial_Coordinates; rdfs:label 60 . 1701801 ; crm:P2_has_type \u201cLatitude . The solution is complex and require the use of type for something which should be properly expressed. Moreover, another type would be use if the reference system should be specified. wgs:SpatialThing\u2192 wgs:lat \u2192 rdfs:Literal / wgs:SpatialThing\u2192 wgs:long \u2192 rdfs:Literal \u200b Another solution is to map a wgs:SpatialThing, which is an entity of the Ontology Geo as a subclass of E53 Place and express the latitude and longitude relative to the place. It is a straightforward solution which, however, does confuse, as it happens in many case, what it is a place and what are the coordinate of that place. The two are very different and should not be mix together. 1 2 3 a wgs : SpatialThing ; wgs : lat \u201c 60 . 1701801 ; wgs : long \u201c 24 . 9419037 \u201d . E53 Place\u2192 P87 is identified by \u2192 wgs:Point\u2192 wgs:lat \u2192 rdfs:Literal This mapping takes in account the declaration, at an ontology level, that wgs:Point, an entity in the ontology Geo, is a subclass of E47 Spatial Coordinates. 1 2 3 4 5 https :// collection . itatti . harvard . edu / resource / ex / place / a crm : E53_Place ; crm : P87_is_identified_by https :// collection . itatti . harvard . edu / resource / ex / place / point . a wgs : Point ; wgs : lat 60.1701801 ; wgs : long \u201c 24 . 9419037 . This solution number 3 is the one chosen by I Tatti , because it clarify the properties and it is properly mapped to CRM. Moreover Geo is, by far, the most used geographical ontology in the Linked Data cloud [^1]. Annex B Meeting minutes [...]","title":"Annex A"},{"location":"Annex/#annex-a","text":"","title":"Annex A"},{"location":"Annex/#discarded-modelling-choices","text":"","title":"Discarded Modelling choices"},{"location":"Annex/#appellation","text":"Possible modelling of the appellation are: E21 Person \u2192 P1 is identified by \u2192 E41 Appellation \u2192 P3 has note \u2192 rdfs:Literal E21 Person \u2192 rdfs:Label \u2192 rdfs:Literal E21 Person \u2192 P1 is identified by \u2192 rdfs:Literal E21 Person \u2192 P1 is identified by \u2192 E41 Appellation \u2192 rdfs:label \u2192 rdfs:Literal The main differences between the three is that example 1 treat the appellation not as a literal but as an entity which has a literal. Thus we can express statements about E41 Appellation, such as when it was used, how it come to be, where this form originate and others of such type. The form chosen by I Tatti is the number 3 ( see the code block ). The reason is very practical. There was no need to express statements about the name itself, and the use of rdfs:label is preferable as a system level ( metaphacts ) in respect to crm:P1_is_identified_by . The possibility of adding rdfs:label to each class in CRM was a specification which was modelled as such: xml-dtd rdf:Property rdf:about=\"http://www.w3.org/2000/01/rdf-schema#label\" rdfs:domain rdf:resource=\"E1_CRM_Entity\"/ rdfs:range rdf:resource=\"http://www.w3.org/2000/01/rdf-schema#Literal\"/ /rdf:Property and added to the schema. The result is that each rdfs:label would be a property of crm:E1_CRM_Entity, and subsequently to each of the subclasses of E1. The rationale behind is that crm:E1_CRM_Entity has as a property crm:P1_is_identified_by, which is completely equivalent to rdfs:label. The consequence is the possibility to use rdfs:label instead of crm:P1_is_identified_by for each of the class in CRM 1 2 a crm : E21_Person ; rdfs : label Giovanni da Udine . The form chosen by SARI is the number 1. But on top of property crm:P3_has_note also rdf:value is used. 1 2 3 crm : E21_Person crm : P1_is_identified_by crm : E82_Actor_Appellation . crm : E82_Actor_Appellation crm : P3_has_note Semper, Gottfried . crm : E82_Actor_Appellation rdf : value Semper, Gottfried .","title":"Appellation"},{"location":"Annex/#preferred-name","text":"Possible modelling of the preferred name are: E21 Person \u2192 L4 has preferred label \u2192 rdfs:Literal E21 Person \u2192 skos:prefLabel \u2192 rdfs:Literal E21 Person \u2192 P3_has_note|rdf:value \u2192 rdfs:Literal The main difference is that the 1 statements is encoded using CIDOC-CRM and CRMDig, while the second use SKOS. The form chosen by I Tatti is the number 2 ( see the code block ). The reason is mainly because it employs SKOS, which we use in other part of the modelling. Moreover SKOS is more used globally. 1 skos : prefLabel Giovanni da Udine . The form chosen by SARI is the number 3 ( see the code block ). On top of having all appellations separately modelled, we attach the preferred one directly to the actor with P3_has_note and rdf:value. 1 2 crm : E21_Person crm : P3_has_note Semper, Gottfried . crm : E21_Person rdf : value Semper, Gottfried .","title":"Preferred Name"},{"location":"Annex/#identifier","text":"Digital object can has multiple identifiers which we want to link to. An easy example would be Michelangelo, which has an internal identifier, a page on wikidata with his own identifier, as well as another one on ULAN. We can chose to define them and chose a preferred one. Possible modelling in CRM are: E21 Person \u2192 P48 has preferred identifier \u2192 rdfs:Literal ( see the code block number 1 ) E21 Person \u2192 P1 is identified by \u2192 rdfs:Literal ( see the code block number 2 ) E21 Person \u2192 P1 is identified by \u2192 E42 Identifier \u2192 P3 has note | rdf:value \u2192 rdfs:Literal ( see the code block number 3 ) 1 crm : P1_is_identified_by B00000737 ; 1 crm : P48_has_preferred_identifier A00000737 ; Both form are employed by ITatti The form chosen by SARI is the number 3. 1 2 3 crm : E21_Person crm : P1_is_identified_by crm : E42_Identifier . crm : E42_Identifier crm : P3_has_note d701b57c-41a8-4ded-b411-08bcfdf01682 . crm : E42_Identifier rdf : value d701b57c-41a8-4ded-b411-08bcfdf01682 .","title":"Identifier"},{"location":"Annex/#place","text":"","title":"Place"},{"location":"Annex/#note","text":"A place is a section of space identified indipendently from its temporal status. They are usually referenced using absolute (WGS, EPSG) or relative (\"top of the mountain\") reference systems. The class SpatialObject, superclass of everything featureor geometry that can have a spatial representation. Place is another important feature we should harmonise. Diverse are the possibilities, both inside and outside CRM. The latter offers an extension called CRMGeo that harmonise CRM with GeoSparql and offer a nice representation of the geographical features with a rich semantics. However the adoption is limited and the learning curve is steep. Other option are offered in CRM, which allow the expression of simple statements about place. The identified mapping options are: E53 Place \u2192 P87 is identified by \u2192 E47 Spatial Coordinates \u2192 rdfs:Label \u2192 rdfs:Literal wgs:SpatialThing\u2192 wgs:lat \u2192 rdfs:Literal / wgs:SpatialThing\u2192 wgs:long \u2192 rdfs:Literal E53 Place\u2192 P87 is identified by \u2192 wgs:Point\u2192 wgs:lat \u2192 rdfs:Literal We will see them in more details E53 Place \u2192 P87 is identified by \u2192 E47 Spatial Coordinates \u2192 rdfs:Label \u2192 rdfs:Literal This mapping actually require the specification of the Type of the Spatial Coordinates we are annotating a place with, such as \"Latitude\" or \"Longitude\". Other options could be \"WGS84\" or other reference system. Entity Relationship Entity Relationship Entity E53 Place P87 is identified by E47 Spatial Coordinates rdfs:Label rdfs:Literal \u2b91 P2 has type rdfs:Literal 1 2 3 4 5 6 7 8 9 10 11 12 a crm : E53_Place ; crm : P87_is_identified_by , . a crm : E47_Spatial_Coordinates ; rdfs : label 11.8818051 ; crm : P2_has_type \u201c Longitude . a crm:E47_Spatial_Coordinates; rdfs:label 60 . 1701801 ; crm:P2_has_type \u201cLatitude . The solution is complex and require the use of type for something which should be properly expressed. Moreover, another type would be use if the reference system should be specified. wgs:SpatialThing\u2192 wgs:lat \u2192 rdfs:Literal / wgs:SpatialThing\u2192 wgs:long \u2192 rdfs:Literal \u200b Another solution is to map a wgs:SpatialThing, which is an entity of the Ontology Geo as a subclass of E53 Place and express the latitude and longitude relative to the place. It is a straightforward solution which, however, does confuse, as it happens in many case, what it is a place and what are the coordinate of that place. The two are very different and should not be mix together. 1 2 3 a wgs : SpatialThing ; wgs : lat \u201c 60 . 1701801 ; wgs : long \u201c 24 . 9419037 \u201d . E53 Place\u2192 P87 is identified by \u2192 wgs:Point\u2192 wgs:lat \u2192 rdfs:Literal This mapping takes in account the declaration, at an ontology level, that wgs:Point, an entity in the ontology Geo, is a subclass of E47 Spatial Coordinates. 1 2 3 4 5 https :// collection . itatti . harvard . edu / resource / ex / place / a crm : E53_Place ; crm : P87_is_identified_by https :// collection . itatti . harvard . edu / resource / ex / place / point . a wgs : Point ; wgs : lat 60.1701801 ; wgs : long \u201c 24 . 9419037 . This solution number 3 is the one chosen by I Tatti , because it clarify the properties and it is properly mapped to CRM. Moreover Geo is, by far, the most used geographical ontology in the Linked Data cloud [^1].","title":"Note"},{"location":"Annex/#annex-b","text":"","title":"Annex B"},{"location":"Annex/#meeting-minutes","text":"[...]","title":"Meeting minutes"},{"location":"Images/","text":"Images This is a draft for the modelling of image data in CIDOC-CRM with reference to IIIF Images and IIIF The IIIF Image API defines a standard URI format for accessing images on the web. The format is: 1 { scheme }: // { server }{ /prefix } / { identifier } / { region } / { size } / { rotation } / { quality } . { format } For example: 1 http://www.example.org/image-service/abcd1234/full/full/0/default.jpg In addition, it defines a standard format for information about an image as follows: 1 { scheme }: // { server }{ /prefix } / { identifier } /info.json For example: 1 http://www.example.org/image-service/abcd1234/info.json The information is returned in JSON-LD format. The JSON-LD contains an @id which specifies the URI of the profile. This can (but does not need to?) follow the same schema: 1 { scheme }: // { server }{ /prefix } / { identifier } Hence the URI resolves to the information about the image, not the image itself. IIIF and CIDOC-CRM The IIIF URI resolves to a JSON-LD document which contains information about the image, not the image itself. It may nevertheless, for practical purposes, be treated as an image \u2013 this is the route chosen by the linked.art model, which types it as a E36 Visual Item. There can be reasons why one wants to use a different URI for the image. For example, if the IIIF endpoint might change in the future, but the URI should remain the same. Or, if the image URI serves as the basis for other URIs (e.g. http://www.example.org/image/abcd1234/manifest) and one wants to avoid potential collision with the IIIF namespace. The proposal here is to use a different URI for the image (for the above reasons), but to construct it so that the identifier matches the IIIF schema. The Image is the subject of the IIIF information. e.g. 1 2 3 4 http://www.example.org/image/abcd1234 a crm: E38_Image . http://www.example.org/image-service/abcd1234 a crm: E73_Information_Object ; crm: P129_is_about http://www.example.org/image/abcd1234 ; crm: P2_has_type http://iiif.io/api/image If the IIIF URI is used to directly represent the image, one can model it as: e.g. 1 2 http://www.example.org/image-service/abcd1234 a crm: E38_Image ; crm: P2_has_type http://iiif.io/api/image","title":"Images"},{"location":"Images/#images","text":"This is a draft for the modelling of image data in CIDOC-CRM with reference to IIIF","title":"Images"},{"location":"Images/#images-and-iiif","text":"The IIIF Image API defines a standard URI format for accessing images on the web. The format is: 1 { scheme }: // { server }{ /prefix } / { identifier } / { region } / { size } / { rotation } / { quality } . { format } For example: 1 http://www.example.org/image-service/abcd1234/full/full/0/default.jpg In addition, it defines a standard format for information about an image as follows: 1 { scheme }: // { server }{ /prefix } / { identifier } /info.json For example: 1 http://www.example.org/image-service/abcd1234/info.json The information is returned in JSON-LD format. The JSON-LD contains an @id which specifies the URI of the profile. This can (but does not need to?) follow the same schema: 1 { scheme }: // { server }{ /prefix } / { identifier } Hence the URI resolves to the information about the image, not the image itself.","title":"Images and IIIF"},{"location":"Images/#iiif-and-cidoc-crm","text":"The IIIF URI resolves to a JSON-LD document which contains information about the image, not the image itself. It may nevertheless, for practical purposes, be treated as an image \u2013 this is the route chosen by the linked.art model, which types it as a E36 Visual Item. There can be reasons why one wants to use a different URI for the image. For example, if the IIIF endpoint might change in the future, but the URI should remain the same. Or, if the image URI serves as the basis for other URIs (e.g. http://www.example.org/image/abcd1234/manifest) and one wants to avoid potential collision with the IIIF namespace. The proposal here is to use a different URI for the image (for the above reasons), but to construct it so that the identifier matches the IIIF schema. The Image is the subject of the IIIF information. e.g. 1 2 3 4 http://www.example.org/image/abcd1234 a crm: E38_Image . http://www.example.org/image-service/abcd1234 a crm: E73_Information_Object ; crm: P129_is_about http://www.example.org/image/abcd1234 ; crm: P2_has_type http://iiif.io/api/image If the IIIF URI is used to directly represent the image, one can model it as: e.g. 1 2 http://www.example.org/image-service/abcd1234 a crm: E38_Image ; crm: P2_has_type http://iiif.io/api/image","title":"IIIF and CIDOC-CRM"},{"location":"Time/","text":"CIDOC-CRM Time Ontologically speaking, the Time dimension is quite a complicated affair. Time, in fact, has different expressions in different calendars. Moreover, different degrees of certainty and precision, make it sometimes very difficult to calculate time intervals, specifically if diverse datasets are concerned. The problem was originally tackled, at least for calculus, by Allen in 1983. In order to overcome the calculation problem, Allen defined seven relationships useful for reasoning about time intervals (X, Y): X before Y (P120) X meets Y (P119) X overlaps Y (P118) X during Y (P117) X starts Y (P116) X finishes Y (P115) X equals Y (P114) CIDOC-CRM was heavily influenced by this approach, and the properties associated with the Temporal entity in CRM refer exactly to these relationships. P120 occurs before (occurs after) P119 meets in time with (is met in time by) P118 overlaps in time with (is overlapped in time by) P117 occurs during (includes) P116 starts (is started by) P115 finishes (is finished by) P114 is equal in time to Temporal entities in CRM have to be seen as part of a time dimension where we can calculate diversity, closeness or equality in time between described events using the Allen's operator expressions defined in CRM. However, for such objective to be achieved, it is paramount to express time intervals not only using topological relationships between temporal entities but fixed time point. This solution open up the problem of a common standard. Time expressions can, in fact, differ. The cause of this diversity is geographical, cultural, normative or just based on personal preferences. Different date values would be: 1 September 1890, 01/09/1890, 1-09-1890, 09/01/1890, 1st Sept 1980 While for a human it is easy to understand that they all refers to the same date, computers need precision and normalisation. In order to reason, make inferences and integrate other time-related data, it is important to use a common standardise format such as the one expressed by ISO 8601:2004 , which prescribe the composition of the date using the format YYYY-MM-DD Employing the same time format helps greatly in calculating time-intervals, but sometimes it is not enough. Specifically, when talking about historical events, our statements in regard of their time can be imprecise and incomplete. In order to overcome the problem, CRM made use of Fuzzy Logic and introduced a fuzzy model where the time intervals are modelled as fuzzy volumes with inner and outer sets. The interior set is the set of all determinate (knowledgeable) time intervals, while the exterior set is the set of all the indeterminate time intervals (uncertainty). The image above help us clarify this concept. Let's assume that the event x {A,B} is an historical event. Our knowledge of the time interval where the event took place has some level diverse degree of certainty. We will, therefore, model these statements as certain and uncertain, where the certain statements are going to be model using the property P81, while the uncertain statements using the property P82. What we will have at the end is a larger set of time intervals (A-C + D-B in the picture) and an internal set of time intervals (C-D), correspondig respectively to imprecise and precise statements. The level of precision and imprecision is determined by the researcher carrying out the work. However, there are more clues to determine what should be considered imprecise. An event which is carried out during the course of a year is usually reported as been made in YYYY (e.g. 1894). However, such notation implies imprecision, because it literally signify a timespan ranging from 1894-01-01 till 1894-12-31. This type of notation is usually used for the creation date of a work of art, but in the majority of cases this is just an approximation, and should be recorded using the imprecise time intervals. It would be quite rare, in fact, that an artist started working the first of January and finished it off for the thirty one of December of the same year. A more precise time statement would become apparent as a result of the collection of a larger pool of statements about the artist, its artwork and its activities. Coming back to the modelling practice, as mentioned above, the the more \"imprecise\" statements are going to be model using the property P82. crm:P82a _begin_of_the_begin identifty the beginning of the outer set of fuzzy time intervals (A) crm:P82b_end_of_the_end identify the end of the fuzzy time intervals (B) The collection of P82a/b statements about the event (as well as about precedent and following events) coming from multiple institution would allow us to detect more precisly the time interval of our historical event. For defining the inner boundaries of our time intervals, and therefore the precise statements about an event, we will use P81. crm:P81a_end_of_the_begin identify the end of the outer boundaries and the beginning of the internal one (C) crm:P81b_begin_of_the_end identify the end of the internal boundary and the begin of the external one (D)","title":"CIDOC-CRM & Time"},{"location":"Time/#cidoc-crm-time","text":"Ontologically speaking, the Time dimension is quite a complicated affair. Time, in fact, has different expressions in different calendars. Moreover, different degrees of certainty and precision, make it sometimes very difficult to calculate time intervals, specifically if diverse datasets are concerned. The problem was originally tackled, at least for calculus, by Allen in 1983. In order to overcome the calculation problem, Allen defined seven relationships useful for reasoning about time intervals (X, Y): X before Y (P120) X meets Y (P119) X overlaps Y (P118) X during Y (P117) X starts Y (P116) X finishes Y (P115) X equals Y (P114) CIDOC-CRM was heavily influenced by this approach, and the properties associated with the Temporal entity in CRM refer exactly to these relationships. P120 occurs before (occurs after) P119 meets in time with (is met in time by) P118 overlaps in time with (is overlapped in time by) P117 occurs during (includes) P116 starts (is started by) P115 finishes (is finished by) P114 is equal in time to Temporal entities in CRM have to be seen as part of a time dimension where we can calculate diversity, closeness or equality in time between described events using the Allen's operator expressions defined in CRM. However, for such objective to be achieved, it is paramount to express time intervals not only using topological relationships between temporal entities but fixed time point. This solution open up the problem of a common standard. Time expressions can, in fact, differ. The cause of this diversity is geographical, cultural, normative or just based on personal preferences. Different date values would be: 1 September 1890, 01/09/1890, 1-09-1890, 09/01/1890, 1st Sept 1980 While for a human it is easy to understand that they all refers to the same date, computers need precision and normalisation. In order to reason, make inferences and integrate other time-related data, it is important to use a common standardise format such as the one expressed by ISO 8601:2004 , which prescribe the composition of the date using the format YYYY-MM-DD Employing the same time format helps greatly in calculating time-intervals, but sometimes it is not enough. Specifically, when talking about historical events, our statements in regard of their time can be imprecise and incomplete. In order to overcome the problem, CRM made use of Fuzzy Logic and introduced a fuzzy model where the time intervals are modelled as fuzzy volumes with inner and outer sets. The interior set is the set of all determinate (knowledgeable) time intervals, while the exterior set is the set of all the indeterminate time intervals (uncertainty). The image above help us clarify this concept. Let's assume that the event x {A,B} is an historical event. Our knowledge of the time interval where the event took place has some level diverse degree of certainty. We will, therefore, model these statements as certain and uncertain, where the certain statements are going to be model using the property P81, while the uncertain statements using the property P82. What we will have at the end is a larger set of time intervals (A-C + D-B in the picture) and an internal set of time intervals (C-D), correspondig respectively to imprecise and precise statements. The level of precision and imprecision is determined by the researcher carrying out the work. However, there are more clues to determine what should be considered imprecise. An event which is carried out during the course of a year is usually reported as been made in YYYY (e.g. 1894). However, such notation implies imprecision, because it literally signify a timespan ranging from 1894-01-01 till 1894-12-31. This type of notation is usually used for the creation date of a work of art, but in the majority of cases this is just an approximation, and should be recorded using the imprecise time intervals. It would be quite rare, in fact, that an artist started working the first of January and finished it off for the thirty one of December of the same year. A more precise time statement would become apparent as a result of the collection of a larger pool of statements about the artist, its artwork and its activities. Coming back to the modelling practice, as mentioned above, the the more \"imprecise\" statements are going to be model using the property P82. crm:P82a _begin_of_the_begin identifty the beginning of the outer set of fuzzy time intervals (A) crm:P82b_end_of_the_end identify the end of the fuzzy time intervals (B) The collection of P82a/b statements about the event (as well as about precedent and following events) coming from multiple institution would allow us to detect more precisly the time interval of our historical event. For defining the inner boundaries of our time intervals, and therefore the precise statements about an event, we will use P81. crm:P81a_end_of_the_begin identify the end of the outer boundaries and the beginning of the internal one (C) crm:P81b_begin_of_the_end identify the end of the internal boundary and the begin of the external one (D)","title":"CIDOC-CRM &amp; Time"},{"location":"bibliographic_data/","text":"Bibliographic Data We model bibliographic data using FRBRoo , the CIDOC-CRM extension for bibliographic data. We demonstrate the modelling of a printed book, but the approach can be adapted to similar items of expressive matters, such as letters, manuscripts, recordings, etc. Note: the information here is based on FRBRoo 2.4, which is the latest release at the time of writing. FRBRoo 3.0 is currently under development. References The examples are based on the data of the Sphaera project. The data model for this was developed following the guidelines in: Doerr, M., Gradmann, S., LeBoeuf, P., Aalberg, T., Bailly, R., Olensky, M. (2013). Final Report on EDM - FRBRoo Application Profile Task Force . Europeana. Retrieved from http://pro.europeana.eu/taskforce/edm-frbroo-application-profile A tutorial on FRBRoo is available here Book In FRBRoo, a book is understood as consisting of several (CRM) entities: the physical book (F5 Item): an individual material copy of a book the manifestation (F3 Manifestation Product Type): the 'prototype' of a particular book, identifiable for example by an ISBN number the expression (F22 Self-Contained Expression): the text contained in a book the work (F1 Work): the work conveyed by a book Using this terminology we can talk of my personal copy of Virginia Woolf's Orlando (F5 Item), which is the Oxford World's Classics edition (F3 Manifestation Product Type), that contains the text edited by Michael H. Whitworth (F22 Self-Contained Expression) and conveys Vriginia Woolf's work Orlando (F1 Work). Note: In FRBRoo 2.4 we distinguish between the F24 Publication Expression that includes the entire content of a book (including page numbers, TOC, etc.) and the F22 Self-Contained Expression that includes the text as written by the author. This discrimination is likely to be abandoned in version 3.0. The components are modelled as follows: F5 Item \u2192 P128 carries \u2192 F24 Publication Expression F24 Publication Expression \u2192 P165 incorporates \u2192 F22 Self-Contained Expression F5 Item \u2192 R7 is example of \u2192 F3 Manifestation Product Type F1 Work \u2192 R3 is realised in \u2192 F22 Self-Contained Expression 1 2 3 4 5 6 7 8 9 10 11 12 13 14 @prefix frbroo: http://iflastandards.info/ns/fr/frbr/frbroo/ . @prefix crm: http://www.cidoc-crm.org/cidoc-crm/ . http://example.org/book a frbroo: F5_Item ; crm: P128_carries http://example.org/book/publication ; crm: R7_is_example_of http://example.org/book/manifestation . http://example.org/book/publication a frbroo: F24_Publication_Expression ; crm: P165_incorporates http://example.org/book/expression . http://example.org/book/expression a frbroo: F22_Self-Contained_Expression . http://example.org/book/work a frbroo: F1_Work ; frbroo: R3_is_realised_in http://example.org/book/expression . Author As author we understand the actor(s) responsible for the creation of a F22 Self-Contained Expression. Therefore, the term does not convey a particular idea of authorship and can include different roles, such as translators, copyists, etc. We model the creation of the Expression as follows: F22 Self-Contained Expression \u2192 R17i was created by \u2192 F28 Expression Creation [^3] The author is then represented as the actor carrying out the event F28 Expression Creation \u2192 P14 carried out by \u2192 E39 Actor 1 2 3 4 5 6 7 8 9 10 @prefix frbroo: http://iflastandards.info/ns/fr/frbr/frbroo/ . @prefix crm: http://www.cidoc-crm.org/cidoc-crm/ . http://example.org/book/expression a frbroo: F22_Self-Contained_Expression ; frbroo: R17i_was_created_by http://example.org/book/expression/event . http://example.org/book/expression/event a frbroo: F28_Expression_Creation ; crm: P14_carried_out_by http://example.org/actor . http://example.org/actor a crm: E39_Actor . The typed property PC14 carried out by is used when we need to represent additional information: F28 Expression Creation \u2192 P01 is domain of \u2192 PC14 carried out by \u2192 P02 has range \u2192 E39 Actor PC14 carried out by \u2192 P14.1 in the role of \u2192 E55 Type 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 @prefix frbroo: http://iflastandards.info/ns/fr/frbr/frbroo/ . @prefix crm: http://www.cidoc-crm.org/cidoc-crm/ . http://example.org/book/expression a frbroo: F22_Self-Contained_Expression ; frbroo: R17i_was_created_by http://example.org/book/expression/event . http://example.org/book/expression/event a frbroo: F28_Expression_Creation ; crm: P01_is_domain_of http://example.org/book/author/1 . http://example.org/book/author/1 a crm: PC14_carried_out_by ; crm: P02_has_range http://example.org/actor ; crm: P14 .1 _in_the_role_of http://example.org/type/author http://example.org/actor a crm: E39_Actor . http://example.org/type/author a crm: E55_Type . Publisher As publisher we understand the actor(s) responsible for the creation of a F24 Publication Expression. A publisher may be the same as the printer, in which case they are also the actor responsible for the F32 Carrier Production Event. We model the creation of the F24 Publication Expression as follows: F24 Publication Expression \u2192 R24i was created through \u2192 F30 Publication Event The publisher is then represented as the actor carrying out the event F30 Publication Event \u2192 P14 carried out by \u2192 E39 Actor 1 2 3 4 5 6 7 8 9 10 @prefix frbroo: http://iflastandards.info/ns/fr/frbr/frbroo/ . @prefix crm: http://www.cidoc-crm.org/cidoc-crm/ . http://example.org/book/publication a frbroo: F24_Publication_Expression ; frbroo: R24i_was_created_through http://example.org/book/publication/event . http://example.org/book/publication/event a frbroo: F30_Publication_Event ; crm: P14_carried_out_by http://example.org/actor . http://example.org/actor a crm: E39_Actor . Date published The publishing date is the date the F30 Publication has been carried out. It is modelled as follows: F30 Publication Event \u2192 P4 has time-span \u2192 E52 Time-Span See the section on Time for more detail on how to model time spans. In bibliographic data we typically have a year, which we model using the P82a and P82b properties. For readability, we also include the year as a rdfs:label to the E52 Time-Span. See the following example: 1 2 3 4 5 6 7 8 9 10 @prefix frbroo: http://iflastandards.info/ns/fr/frbr/frbroo/ . @prefix crm: http://www.cidoc-crm.org/cidoc-crm/ . http://example.org/book/publication/event a frbroo: F30_Publication_Event ; crm: P4_has_time-span http://example.org/book/publication/date . http://example.org/book/publication/date a crm: E52_Time-Span ; rdfs: label 1980 ; crm: P82a_begin_of_the_beginning 1980-01-01 ^^ xsd:date ; crm: P82b_end_of_the_end 1980-12-31 ^^ xsd:date . Implementation in ResearchSpace We require users to specify three dates: the earliest year, the latest year and a textual date. If the exact year is known, users enter the same year in all three fields. If the exact year is not known, users can enter boundaries in the earliest and latest field and specify a verbal description in the textfield (e.g. \"ca. 1950\"). This setup works in our case, where most years are specified, but might not be the best solution when dates are uncertain (see Time section for further discussion on this). ResearchSpace offers a Date Input field. However, it requires a complete date whereas we want to allow users to just enter a year. This year then gets translated to 1 January for the earliest year and 31 December for the latest year. This step is necessary to enable searching and for the data that is stored in the dataset to be properly formated (xsd:date). The insert pattern for the earliest publication date looks as follows: 1 2 3 4 5 6 7 8 9 INSERT { ?publication_event crm : P4_has_time-span ?time_span . ?time_span a ecrm : E52_Time-Span ; crm : P82a_begin_of_the_beginning ?value_begin . } WHERE { BIND ( xsd : date ( CONCAT ( STR ( $value ), -01-01 )) as ?value_begin ) BIND ( URI ( CONCAT ( STR ( $subject ), /publication/event )) as ?publication_event ) BIND ( URI ( CONCAT ( STR ( $subject ), /publication/date )) as ?time_span ) } The bound $value is converted to a xsd:date and bound to ?value_begin which is the value that is written into the database. The conversion to xsd:date occurs when writing to the database, which means the XSD Datatype of the field needs to be empty and a validation needs to occur via a ASK query. For example, the following query validates the input as a four digit number: 1 2 3 4 ASK { BIND ( STRLEN ( STR ( xsd : integer ( $value ))) as $num_value_len ) FILTER ( $num_value_len = 4 ) }","title":"Bibliographic Data"},{"location":"bibliographic_data/#bibliographic-data","text":"We model bibliographic data using FRBRoo , the CIDOC-CRM extension for bibliographic data. We demonstrate the modelling of a printed book, but the approach can be adapted to similar items of expressive matters, such as letters, manuscripts, recordings, etc. Note: the information here is based on FRBRoo 2.4, which is the latest release at the time of writing. FRBRoo 3.0 is currently under development.","title":"Bibliographic Data"},{"location":"bibliographic_data/#references","text":"The examples are based on the data of the Sphaera project. The data model for this was developed following the guidelines in: Doerr, M., Gradmann, S., LeBoeuf, P., Aalberg, T., Bailly, R., Olensky, M. (2013). Final Report on EDM - FRBRoo Application Profile Task Force . Europeana. Retrieved from http://pro.europeana.eu/taskforce/edm-frbroo-application-profile A tutorial on FRBRoo is available here","title":"References"},{"location":"bibliographic_data/#book","text":"In FRBRoo, a book is understood as consisting of several (CRM) entities: the physical book (F5 Item): an individual material copy of a book the manifestation (F3 Manifestation Product Type): the 'prototype' of a particular book, identifiable for example by an ISBN number the expression (F22 Self-Contained Expression): the text contained in a book the work (F1 Work): the work conveyed by a book Using this terminology we can talk of my personal copy of Virginia Woolf's Orlando (F5 Item), which is the Oxford World's Classics edition (F3 Manifestation Product Type), that contains the text edited by Michael H. Whitworth (F22 Self-Contained Expression) and conveys Vriginia Woolf's work Orlando (F1 Work). Note: In FRBRoo 2.4 we distinguish between the F24 Publication Expression that includes the entire content of a book (including page numbers, TOC, etc.) and the F22 Self-Contained Expression that includes the text as written by the author. This discrimination is likely to be abandoned in version 3.0. The components are modelled as follows: F5 Item \u2192 P128 carries \u2192 F24 Publication Expression F24 Publication Expression \u2192 P165 incorporates \u2192 F22 Self-Contained Expression F5 Item \u2192 R7 is example of \u2192 F3 Manifestation Product Type F1 Work \u2192 R3 is realised in \u2192 F22 Self-Contained Expression 1 2 3 4 5 6 7 8 9 10 11 12 13 14 @prefix frbroo: http://iflastandards.info/ns/fr/frbr/frbroo/ . @prefix crm: http://www.cidoc-crm.org/cidoc-crm/ . http://example.org/book a frbroo: F5_Item ; crm: P128_carries http://example.org/book/publication ; crm: R7_is_example_of http://example.org/book/manifestation . http://example.org/book/publication a frbroo: F24_Publication_Expression ; crm: P165_incorporates http://example.org/book/expression . http://example.org/book/expression a frbroo: F22_Self-Contained_Expression . http://example.org/book/work a frbroo: F1_Work ; frbroo: R3_is_realised_in http://example.org/book/expression .","title":"Book"},{"location":"bibliographic_data/#author","text":"As author we understand the actor(s) responsible for the creation of a F22 Self-Contained Expression. Therefore, the term does not convey a particular idea of authorship and can include different roles, such as translators, copyists, etc. We model the creation of the Expression as follows: F22 Self-Contained Expression \u2192 R17i was created by \u2192 F28 Expression Creation [^3] The author is then represented as the actor carrying out the event F28 Expression Creation \u2192 P14 carried out by \u2192 E39 Actor 1 2 3 4 5 6 7 8 9 10 @prefix frbroo: http://iflastandards.info/ns/fr/frbr/frbroo/ . @prefix crm: http://www.cidoc-crm.org/cidoc-crm/ . http://example.org/book/expression a frbroo: F22_Self-Contained_Expression ; frbroo: R17i_was_created_by http://example.org/book/expression/event . http://example.org/book/expression/event a frbroo: F28_Expression_Creation ; crm: P14_carried_out_by http://example.org/actor . http://example.org/actor a crm: E39_Actor . The typed property PC14 carried out by is used when we need to represent additional information: F28 Expression Creation \u2192 P01 is domain of \u2192 PC14 carried out by \u2192 P02 has range \u2192 E39 Actor PC14 carried out by \u2192 P14.1 in the role of \u2192 E55 Type 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 @prefix frbroo: http://iflastandards.info/ns/fr/frbr/frbroo/ . @prefix crm: http://www.cidoc-crm.org/cidoc-crm/ . http://example.org/book/expression a frbroo: F22_Self-Contained_Expression ; frbroo: R17i_was_created_by http://example.org/book/expression/event . http://example.org/book/expression/event a frbroo: F28_Expression_Creation ; crm: P01_is_domain_of http://example.org/book/author/1 . http://example.org/book/author/1 a crm: PC14_carried_out_by ; crm: P02_has_range http://example.org/actor ; crm: P14 .1 _in_the_role_of http://example.org/type/author http://example.org/actor a crm: E39_Actor . http://example.org/type/author a crm: E55_Type .","title":"Author"},{"location":"bibliographic_data/#publisher","text":"As publisher we understand the actor(s) responsible for the creation of a F24 Publication Expression. A publisher may be the same as the printer, in which case they are also the actor responsible for the F32 Carrier Production Event. We model the creation of the F24 Publication Expression as follows: F24 Publication Expression \u2192 R24i was created through \u2192 F30 Publication Event The publisher is then represented as the actor carrying out the event F30 Publication Event \u2192 P14 carried out by \u2192 E39 Actor 1 2 3 4 5 6 7 8 9 10 @prefix frbroo: http://iflastandards.info/ns/fr/frbr/frbroo/ . @prefix crm: http://www.cidoc-crm.org/cidoc-crm/ . http://example.org/book/publication a frbroo: F24_Publication_Expression ; frbroo: R24i_was_created_through http://example.org/book/publication/event . http://example.org/book/publication/event a frbroo: F30_Publication_Event ; crm: P14_carried_out_by http://example.org/actor . http://example.org/actor a crm: E39_Actor .","title":"Publisher"},{"location":"bibliographic_data/#date-published","text":"The publishing date is the date the F30 Publication has been carried out. It is modelled as follows: F30 Publication Event \u2192 P4 has time-span \u2192 E52 Time-Span See the section on Time for more detail on how to model time spans. In bibliographic data we typically have a year, which we model using the P82a and P82b properties. For readability, we also include the year as a rdfs:label to the E52 Time-Span. See the following example: 1 2 3 4 5 6 7 8 9 10 @prefix frbroo: http://iflastandards.info/ns/fr/frbr/frbroo/ . @prefix crm: http://www.cidoc-crm.org/cidoc-crm/ . http://example.org/book/publication/event a frbroo: F30_Publication_Event ; crm: P4_has_time-span http://example.org/book/publication/date . http://example.org/book/publication/date a crm: E52_Time-Span ; rdfs: label 1980 ; crm: P82a_begin_of_the_beginning 1980-01-01 ^^ xsd:date ; crm: P82b_end_of_the_end 1980-12-31 ^^ xsd:date .","title":"Date published"},{"location":"bibliographic_data/#implementation-in-researchspace","text":"We require users to specify three dates: the earliest year, the latest year and a textual date. If the exact year is known, users enter the same year in all three fields. If the exact year is not known, users can enter boundaries in the earliest and latest field and specify a verbal description in the textfield (e.g. \"ca. 1950\"). This setup works in our case, where most years are specified, but might not be the best solution when dates are uncertain (see Time section for further discussion on this). ResearchSpace offers a Date Input field. However, it requires a complete date whereas we want to allow users to just enter a year. This year then gets translated to 1 January for the earliest year and 31 December for the latest year. This step is necessary to enable searching and for the data that is stored in the dataset to be properly formated (xsd:date). The insert pattern for the earliest publication date looks as follows: 1 2 3 4 5 6 7 8 9 INSERT { ?publication_event crm : P4_has_time-span ?time_span . ?time_span a ecrm : E52_Time-Span ; crm : P82a_begin_of_the_beginning ?value_begin . } WHERE { BIND ( xsd : date ( CONCAT ( STR ( $value ), -01-01 )) as ?value_begin ) BIND ( URI ( CONCAT ( STR ( $subject ), /publication/event )) as ?publication_event ) BIND ( URI ( CONCAT ( STR ( $subject ), /publication/date )) as ?time_span ) } The bound $value is converted to a xsd:date and bound to ?value_begin which is the value that is written into the database. The conversion to xsd:date occurs when writing to the database, which means the XSD Datatype of the field needs to be empty and a validation needs to occur via a ASK query. For example, the following query validates the input as a four digit number: 1 2 3 4 ASK { BIND ( STRLEN ( STR ( xsd : integer ( $value ))) as $num_value_len ) FILTER ( $num_value_len = 4 ) }","title":"Implementation in ResearchSpace"},{"location":"modelling/","text":"CORDH Data Harmonisation Group CRM modelling examples The document outlines modelling choices in relation to diverse entities described in the Consortium's data. The modelling is provided, whenever possible, using CIDOC-CRM. However, in certain cases, other ontologies are used. For each of the described entities diverse encoding choices were outlined, and a decision about each of them was made. The scope of this document is not to provide a track of this process, but just to present its results. The documentation of the possible modelling and encoding of an entity in RDF can be found in the Annex A . For each entity, as an example of its use, an RDF encoding of a real-world statement is provided. The syntax of the encoding is Turtle, and all the prefix used can be found on http://prefix.cc/ . Appellation Note An appellation is a sign, usually in the form of a string of characters, used for referencing an entity (person object, place, an event etc.). More appellations can refer, in the same language, to the same entity, as in the case of: Monna Lisa or La Gioconda. which both refers to the same painting Appellations can also be tied to a specific time interval, such as in the case of: Prince, Alexander Nevermind, The Artist, The Artist Formerly Known as Prince (TAFKAP), Camille, Christopher, Tracy Jamie Starr, Joey Coco, Tora Tora, The Kid \u2014 which refers to Prince Rogers Nelson in diverse moments of his career However, If more appellations can coexist, a chosen one should be defined using a different property which identifies it with our preferred appellation. Modelling the Appellation A simple appellation can be modelled in CRM as E21 Person \u2192 P1 is identified by \u2192 E41 Appellation The encoding of the string of characters of the appellation can be done in multiple ways. The form chosen by the consortium is: crm:E21 Person \u2192 P1 is identified by \u2192 E41 Appellation \u2192 rdfs:Label \u2192 rdfs:Literal 1 2 3 4 5 6 http://vocab.getty.edu/ulan/500020981 a crm: E21_Person ; crm: P1_is_identified_by https://collection.itatti.harvard.edu/resource/appellation/6c5a29fd81f9 . https://collection.itatti.harvard.edu/resource/appellation/6c5a29fd81f9 a crm: E41_Appellation ; rdfs: label Gian Francesco de Maineri . Codebox 1 - Appellation Modelling Note The use of crm:P3_has_note for encoding the value of the appellation is discouraged because of its confusing nature. Appellations can have both notes and values, which are part of two different information domains, and should not overlap. Additionally, the property rdf:value, which can be also be used to encode the appellation, is to be set aside because of its lack of explicit semantics. Identifier Note An identifier is a string assigned to an entity that uniquely identifies it in a system (usually, a digital system). Examples of identifiers comprise inventory numbers, databases keys or other strings used for retrieval and identification purpose. As for the appellation, an entity can have multiple identifiers from the same or different system, and a preferred one can be chosen. Modelling the Identifier A simple identifier can be modelled in CRM as E21 Person \u2192 P1 is identified by \u2192 E42 Identifier The encoding of the string of characters of the identifier can be done in multiple ways. The form chosen by the consortium is: E21 Person \u2192 P1 is identified by \u2192 E42 Identifier \u2192 rdfs:Label \u2192 rdfs:Literal 1 2 3 4 5 6 http://vocab.getty.edu/ulan/500020981 a crm: E21_Person ; crm: P1_is_identified_by https://collection.itatti.harvard.edu/resource/identifier/6c5a29fd8 . https://collection.itatti.harvard.edu/resource/identifier/6c5a29fd8 a crm: E42_Identifier ; rdfs: label 6c5a29fd8 . Codebox 2 - Identifier Preferred Appellations Identifiers The preference for a specific sign or string for identifying an entity will be modelled using type. In respect to the encoding of the appellation or the identifier , the initial part of the modelling remain the same: E21 Person \u2192 P1 is identified by \u2192 E41 Appellation E21 Person \u2192 P1 is identified by \u2192 E42 Identifier The preference towards a specific appellation or identifier has to be defined using a E55 Type: E21 Person \u2192 P1 is identified by \u2192 E41 Appellation \u2192 P2 has type \u2192 E55 Type It is advisable to use a standard vocabulary to express the preferred type, such as the one from the Art and Architecture Thesaurus: http://vocab.getty.edu/page/aat/300404670. 1 2 3 4 5 6 http://vocab.getty.edu/ulan/500020981 a crm: E21_Person ; crm: P1_is_identified_by https://collection.itatti.harvard.edu/resource/appellation/6c5a29fd81f9 . https://collection.itatti.harvard.edu/resource/appellation/6c5a29fd81f9 a crm: E41_Appellation ; rdfs: label Gian Francesco de Maineri . crm: P2_has_type http://vocab.getty.edu/page/aat/300404670 ^^ xsd:anyURI . Codebox 3 - Preferred Appellation If one appellation is represented using diverse alphabets (Latin, Chinese, Greek, Russian..), it would be treated as the same E41 Appellation, and the different strings encoded with rdfs:label. In this case only,skos:prefLabel can be used to define the preferred textual version of the same appellation. 1 2 3 4 5 6 7 http://vocab.getty.edu/ulan/500318548 a crm: E21_Person ; crm: P1_is_identified_by https://collection.itatti.harvard.edu/resource/appellation/6c5a29fd81f9 . https://collection.itatti.harvard.edu/resource/appellation/6c5a29fd81f9 a crm: E41_Appellation ; skos: prefLabel Gogol, Nikolay , rdfs: label \u0413\u043e\u0433\u043e\u043b\u044c, \u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u0412\u0430\u0441\u0438\u043b\u044c\u0435\u0432\u0438\u0447 , rdfs: label \u679c\u6208\u91cc . Codebox 4 - Alphabetic differences Modelling Note CRM does provide a property for encoding a preferred identifier, P48 has preferred identifier, but the range is E42 Identifier, a subclass of E41 Appellation, therefore it cannot be used for encoding the preferred appellation. While it can be used at least for the preferred we opted for a standard solution for both classes While the use of skos:prefLabel was considered, it was easily rejected because if a person has multiple appellations, skos:prefLabel would not identify the preferred one, but only the preferred string of text of that specific appellation. Language for Literals To be completed Dimension/Quantity Note Dimension are measurable data which results from an observation. The outcome of an observation is always to be seen as a couple value/system where the meaning of the value is dependant on the system used. Dimensions can be modelled in CRM as: E54 Dimension \u2192 P91 has unit \u2192 E58 Measurement Unit E54 Dimension \u2192 P90 has value \u2192 E60 Number The modelling above is based on the differentiation between the value and the system which provide meaning to the value. Modelling Dimension When talking about Dimension it is paramount to use an external recognisable authority to define the system which provides meaning to the value. In order to define the measurement units and the quantity kind (length, weight) we rely on E55 Type and the vocabulary provided with the Ontology of units of measure (OM). 1 2 3 4 5 6 7 8 9 https://collection.itatti.harvard.edu/resource/dimension/width a crm: E54_Dimension ; crm: P90_has_value 6 ^^ xsd:decimal ; crm: P91_has_unit http://www.ontology-of-units-of-measure.org/resource/om-2/centimetre ; crm: P2_has_type http://www.ontology-of-units-of-measure.org/resource/om-2/Width . https://collection.itatti.harvard.edu/resource/dimension/lenght a crm: E54_Dimension ; crm: P90_has_value 12 ^^ xsd:decimal ; crm: P91_has_unit http://www.ontology-of-units-of-measure.org/resource/om-2/centimetre ; crm: P2_has_type http://www.ontology-of-units-of-measure.org/resource/om-2/Length . OM includes all the necessary dimensions required by our use cases. It is easy to browse, and well developed. Other ontologies were considered, specifically QUDT, which is \"Quantity, Unit, Dimension and Type\" schema used for modelling physical measurable properties in a machine processable form. While QUDT was the initial candidate, it was not chosen because the browsing of the units was quite difficult and, moreover, it is still under development and not yet complete or stable. OM can be easily browsed here: http://www.ontology-of-units-of-measure.org/ Time-span Note CIDOC-CRM assume the existence of a SpaceTime dimension, where each temporal entity can be mapped to. This system allows the computing of diversity, closeness or equality in time between events. In doing so, it treats temporal extents in their physical sense, characterising each time interval with a beginning, an end and a duration. Additionally, CIDOC-CRM assumes that our knowledge of the time intervals of a historical event has a diverse degree of certainty, and it allows us to record such certainty/uncertainty with specific properties. A useful summarization of the treatment of time in CIDOC-CRM is available in the document Time . Following CIDOC-CRM we will model time-related assertions as certain or uncertain, where the certain statements are going to be model using the property P81, while the uncertain statements using the property P82. The level of certainty has to be determined by the researcher carrying out the work. We can have two diverse modelling scenario: Fuzzy time statements Precise time statements In both cases the date is formatted following the ISO 8601:2004 recommendations that prescribe the composition of the date using the format: YYYY-MM-DD Fuzzy Time Statements Fuzzy time statements are modelled using CIDOC-CRM as: E52 Time-Span \u2192 P82a begin of the begin \u2192 xsd:dateTime E52 Time-Span \u2192 P82b end of the end \u2192 xsd:dateTime The date needs to be expressed with its datatype (date or dateTime). See the W3C reccomandations for more details. 1 2 3 4 https://collection.itatti.harvard.edu/resource/work/W00060289/production/timespan a crm: E52_Time-Span ; crm: P82a_begin_of_the_begin 1401-01-01 ^^ xsd:date ; crm: P82b_end_of_the_end 1700-12-31 ^^ xsd:date . Codebox 5 - Time Statements Modelling Note *The production event recorded here has a time interval of almost 3 centuries. The choice of using a fuzzy time statement is, in this case, quite clear. * Precise time statements Precise time statements are modelled using CIDOC-CRM as: E52 Time-Span \u2192 P81a end of the begin \u2192 xsd:dateTime E52 Time-Span \u2192 P81b begin of the end \u2192 xsd:dateTime 1 2 3 4 https://collection.itatti.harvard.edu/resource/work/W00060289/production/timespan a crm: E52_Time-Span ; crm: P81a_begin_of_the_begin 2001-10-21T21:32:52 ^^ xsd:dateTime ; crm: P81b_end_of_the_end 2001-10-26T00:00:00 ^^ xsd:dateTime . Codebox 6 - Precise Time Statements Modelling Note The precision of the date is a clear sign we are dealing with a more precise time statement. Spatial Coordinate Note A place is a section of space identified independently from its temporal status. They are usually referenced using absolute (WGS, EPSG) or relative reference systems. Absolute reference system uses point-based coordinates to identify the representation of a space. Longitude Latitude The spatial coordinates of a place can be modelled in CIDOC-CRM as E53 Place \u2192 P87 is identified by \u2192 E47 Spatial Coordinates The encoding of the latitude and longitude can be done in multiple ways. The form chosen by the consortium is to rely on a basic RDF vocabulary for representing latitude and longitude using WGS84 as a reference system. In order to do so, we will have to map the class crm:E47_Spatial_Coordinates with the corresponding class in W3C-Basic-Geo . We can declare geo:Point as a subclass of crm:E47_Spatial_Coordinates with the following 1 2 3 rdfs: Class rdf: about = http://www.w3.org/2003/01/geo/wgs84_pos#Point rdfs: subClassOf rdf: resource = E47_Spatial_Coordinates / /rdfs:Class Codebox 7 Having mapped crm:E47_Spatial_Coordinates to geo:Point we can use two new properties geo:lat geo:long To describe, respectively, the latitude and longitude of an E53 Place. 1 2 3 4 5 https : //collection . itatti . harvard . edu/resource/ex/place/ a crm: E53_Place ; crm: P87_is_identified_by https : //collection . itatti . harvard . edu/resource/ex/place/point . a wgs: Point ; wgs: lat 60.1701801 ; wgs: long \u201c 24.9419037 . Codebox 8 - Latitude and Longitude of a Place","title":"Entities"},{"location":"modelling/#cordh-data-harmonisation-group","text":"CRM modelling examples The document outlines modelling choices in relation to diverse entities described in the Consortium's data. The modelling is provided, whenever possible, using CIDOC-CRM. However, in certain cases, other ontologies are used. For each of the described entities diverse encoding choices were outlined, and a decision about each of them was made. The scope of this document is not to provide a track of this process, but just to present its results. The documentation of the possible modelling and encoding of an entity in RDF can be found in the Annex A . For each entity, as an example of its use, an RDF encoding of a real-world statement is provided. The syntax of the encoding is Turtle, and all the prefix used can be found on http://prefix.cc/ .","title":"CORDH Data Harmonisation Group"},{"location":"modelling/#appellation","text":"","title":"Appellation"},{"location":"modelling/#note","text":"An appellation is a sign, usually in the form of a string of characters, used for referencing an entity (person object, place, an event etc.). More appellations can refer, in the same language, to the same entity, as in the case of: Monna Lisa or La Gioconda. which both refers to the same painting Appellations can also be tied to a specific time interval, such as in the case of: Prince, Alexander Nevermind, The Artist, The Artist Formerly Known as Prince (TAFKAP), Camille, Christopher, Tracy Jamie Starr, Joey Coco, Tora Tora, The Kid \u2014 which refers to Prince Rogers Nelson in diverse moments of his career However, If more appellations can coexist, a chosen one should be defined using a different property which identifies it with our preferred appellation.","title":"Note"},{"location":"modelling/#modelling-the-appellation","text":"A simple appellation can be modelled in CRM as E21 Person \u2192 P1 is identified by \u2192 E41 Appellation The encoding of the string of characters of the appellation can be done in multiple ways. The form chosen by the consortium is: crm:E21 Person \u2192 P1 is identified by \u2192 E41 Appellation \u2192 rdfs:Label \u2192 rdfs:Literal 1 2 3 4 5 6 http://vocab.getty.edu/ulan/500020981 a crm: E21_Person ; crm: P1_is_identified_by https://collection.itatti.harvard.edu/resource/appellation/6c5a29fd81f9 . https://collection.itatti.harvard.edu/resource/appellation/6c5a29fd81f9 a crm: E41_Appellation ; rdfs: label Gian Francesco de Maineri . Codebox 1 - Appellation Modelling Note The use of crm:P3_has_note for encoding the value of the appellation is discouraged because of its confusing nature. Appellations can have both notes and values, which are part of two different information domains, and should not overlap. Additionally, the property rdf:value, which can be also be used to encode the appellation, is to be set aside because of its lack of explicit semantics.","title":"Modelling the Appellation"},{"location":"modelling/#identifier","text":"","title":"Identifier"},{"location":"modelling/#note_1","text":"An identifier is a string assigned to an entity that uniquely identifies it in a system (usually, a digital system). Examples of identifiers comprise inventory numbers, databases keys or other strings used for retrieval and identification purpose. As for the appellation, an entity can have multiple identifiers from the same or different system, and a preferred one can be chosen.","title":"Note"},{"location":"modelling/#modelling-the-identifier","text":"A simple identifier can be modelled in CRM as E21 Person \u2192 P1 is identified by \u2192 E42 Identifier The encoding of the string of characters of the identifier can be done in multiple ways. The form chosen by the consortium is: E21 Person \u2192 P1 is identified by \u2192 E42 Identifier \u2192 rdfs:Label \u2192 rdfs:Literal 1 2 3 4 5 6 http://vocab.getty.edu/ulan/500020981 a crm: E21_Person ; crm: P1_is_identified_by https://collection.itatti.harvard.edu/resource/identifier/6c5a29fd8 . https://collection.itatti.harvard.edu/resource/identifier/6c5a29fd8 a crm: E42_Identifier ; rdfs: label 6c5a29fd8 . Codebox 2 - Identifier","title":"Modelling the Identifier"},{"location":"modelling/#preferred-appellations-identifiers","text":"The preference for a specific sign or string for identifying an entity will be modelled using type. In respect to the encoding of the appellation or the identifier , the initial part of the modelling remain the same: E21 Person \u2192 P1 is identified by \u2192 E41 Appellation E21 Person \u2192 P1 is identified by \u2192 E42 Identifier The preference towards a specific appellation or identifier has to be defined using a E55 Type: E21 Person \u2192 P1 is identified by \u2192 E41 Appellation \u2192 P2 has type \u2192 E55 Type It is advisable to use a standard vocabulary to express the preferred type, such as the one from the Art and Architecture Thesaurus: http://vocab.getty.edu/page/aat/300404670. 1 2 3 4 5 6 http://vocab.getty.edu/ulan/500020981 a crm: E21_Person ; crm: P1_is_identified_by https://collection.itatti.harvard.edu/resource/appellation/6c5a29fd81f9 . https://collection.itatti.harvard.edu/resource/appellation/6c5a29fd81f9 a crm: E41_Appellation ; rdfs: label Gian Francesco de Maineri . crm: P2_has_type http://vocab.getty.edu/page/aat/300404670 ^^ xsd:anyURI . Codebox 3 - Preferred Appellation If one appellation is represented using diverse alphabets (Latin, Chinese, Greek, Russian..), it would be treated as the same E41 Appellation, and the different strings encoded with rdfs:label. In this case only,skos:prefLabel can be used to define the preferred textual version of the same appellation. 1 2 3 4 5 6 7 http://vocab.getty.edu/ulan/500318548 a crm: E21_Person ; crm: P1_is_identified_by https://collection.itatti.harvard.edu/resource/appellation/6c5a29fd81f9 . https://collection.itatti.harvard.edu/resource/appellation/6c5a29fd81f9 a crm: E41_Appellation ; skos: prefLabel Gogol, Nikolay , rdfs: label \u0413\u043e\u0433\u043e\u043b\u044c, \u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u0412\u0430\u0441\u0438\u043b\u044c\u0435\u0432\u0438\u0447 , rdfs: label \u679c\u6208\u91cc . Codebox 4 - Alphabetic differences Modelling Note CRM does provide a property for encoding a preferred identifier, P48 has preferred identifier, but the range is E42 Identifier, a subclass of E41 Appellation, therefore it cannot be used for encoding the preferred appellation. While it can be used at least for the preferred we opted for a standard solution for both classes While the use of skos:prefLabel was considered, it was easily rejected because if a person has multiple appellations, skos:prefLabel would not identify the preferred one, but only the preferred string of text of that specific appellation.","title":"Preferred Appellations &amp; Identifiers"},{"location":"modelling/#language-for-literals","text":"To be completed","title":"Language for Literals"},{"location":"modelling/#dimensionquantity","text":"","title":"Dimension/Quantity"},{"location":"modelling/#note_2","text":"Dimension are measurable data which results from an observation. The outcome of an observation is always to be seen as a couple value/system where the meaning of the value is dependant on the system used. Dimensions can be modelled in CRM as: E54 Dimension \u2192 P91 has unit \u2192 E58 Measurement Unit E54 Dimension \u2192 P90 has value \u2192 E60 Number The modelling above is based on the differentiation between the value and the system which provide meaning to the value.","title":"Note"},{"location":"modelling/#modelling-dimension","text":"When talking about Dimension it is paramount to use an external recognisable authority to define the system which provides meaning to the value. In order to define the measurement units and the quantity kind (length, weight) we rely on E55 Type and the vocabulary provided with the Ontology of units of measure (OM). 1 2 3 4 5 6 7 8 9 https://collection.itatti.harvard.edu/resource/dimension/width a crm: E54_Dimension ; crm: P90_has_value 6 ^^ xsd:decimal ; crm: P91_has_unit http://www.ontology-of-units-of-measure.org/resource/om-2/centimetre ; crm: P2_has_type http://www.ontology-of-units-of-measure.org/resource/om-2/Width . https://collection.itatti.harvard.edu/resource/dimension/lenght a crm: E54_Dimension ; crm: P90_has_value 12 ^^ xsd:decimal ; crm: P91_has_unit http://www.ontology-of-units-of-measure.org/resource/om-2/centimetre ; crm: P2_has_type http://www.ontology-of-units-of-measure.org/resource/om-2/Length . OM includes all the necessary dimensions required by our use cases. It is easy to browse, and well developed. Other ontologies were considered, specifically QUDT, which is \"Quantity, Unit, Dimension and Type\" schema used for modelling physical measurable properties in a machine processable form. While QUDT was the initial candidate, it was not chosen because the browsing of the units was quite difficult and, moreover, it is still under development and not yet complete or stable. OM can be easily browsed here: http://www.ontology-of-units-of-measure.org/","title":"Modelling Dimension"},{"location":"modelling/#time-span","text":"","title":"Time-span"},{"location":"modelling/#note_3","text":"CIDOC-CRM assume the existence of a SpaceTime dimension, where each temporal entity can be mapped to. This system allows the computing of diversity, closeness or equality in time between events. In doing so, it treats temporal extents in their physical sense, characterising each time interval with a beginning, an end and a duration. Additionally, CIDOC-CRM assumes that our knowledge of the time intervals of a historical event has a diverse degree of certainty, and it allows us to record such certainty/uncertainty with specific properties. A useful summarization of the treatment of time in CIDOC-CRM is available in the document Time . Following CIDOC-CRM we will model time-related assertions as certain or uncertain, where the certain statements are going to be model using the property P81, while the uncertain statements using the property P82. The level of certainty has to be determined by the researcher carrying out the work. We can have two diverse modelling scenario: Fuzzy time statements Precise time statements In both cases the date is formatted following the ISO 8601:2004 recommendations that prescribe the composition of the date using the format: YYYY-MM-DD","title":"Note"},{"location":"modelling/#fuzzy-time-statements","text":"Fuzzy time statements are modelled using CIDOC-CRM as: E52 Time-Span \u2192 P82a begin of the begin \u2192 xsd:dateTime E52 Time-Span \u2192 P82b end of the end \u2192 xsd:dateTime The date needs to be expressed with its datatype (date or dateTime). See the W3C reccomandations for more details. 1 2 3 4 https://collection.itatti.harvard.edu/resource/work/W00060289/production/timespan a crm: E52_Time-Span ; crm: P82a_begin_of_the_begin 1401-01-01 ^^ xsd:date ; crm: P82b_end_of_the_end 1700-12-31 ^^ xsd:date . Codebox 5 - Time Statements Modelling Note *The production event recorded here has a time interval of almost 3 centuries. The choice of using a fuzzy time statement is, in this case, quite clear. *","title":"Fuzzy Time Statements"},{"location":"modelling/#precise-time-statements","text":"Precise time statements are modelled using CIDOC-CRM as: E52 Time-Span \u2192 P81a end of the begin \u2192 xsd:dateTime E52 Time-Span \u2192 P81b begin of the end \u2192 xsd:dateTime 1 2 3 4 https://collection.itatti.harvard.edu/resource/work/W00060289/production/timespan a crm: E52_Time-Span ; crm: P81a_begin_of_the_begin 2001-10-21T21:32:52 ^^ xsd:dateTime ; crm: P81b_end_of_the_end 2001-10-26T00:00:00 ^^ xsd:dateTime . Codebox 6 - Precise Time Statements Modelling Note The precision of the date is a clear sign we are dealing with a more precise time statement.","title":"Precise time statements"},{"location":"modelling/#spatial-coordinate","text":"","title":"Spatial Coordinate"},{"location":"modelling/#note_4","text":"A place is a section of space identified independently from its temporal status. They are usually referenced using absolute (WGS, EPSG) or relative reference systems. Absolute reference system uses point-based coordinates to identify the representation of a space.","title":"Note"},{"location":"modelling/#longitude-latitude","text":"The spatial coordinates of a place can be modelled in CIDOC-CRM as E53 Place \u2192 P87 is identified by \u2192 E47 Spatial Coordinates The encoding of the latitude and longitude can be done in multiple ways. The form chosen by the consortium is to rely on a basic RDF vocabulary for representing latitude and longitude using WGS84 as a reference system. In order to do so, we will have to map the class crm:E47_Spatial_Coordinates with the corresponding class in W3C-Basic-Geo . We can declare geo:Point as a subclass of crm:E47_Spatial_Coordinates with the following 1 2 3 rdfs: Class rdf: about = http://www.w3.org/2003/01/geo/wgs84_pos#Point rdfs: subClassOf rdf: resource = E47_Spatial_Coordinates / /rdfs:Class Codebox 7 Having mapped crm:E47_Spatial_Coordinates to geo:Point we can use two new properties geo:lat geo:long To describe, respectively, the latitude and longitude of an E53 Place. 1 2 3 4 5 https : //collection . itatti . harvard . edu/resource/ex/place/ a crm: E53_Place ; crm: P87_is_identified_by https : //collection . itatti . harvard . edu/resource/ex/place/point . a wgs: Point ; wgs: lat 60.1701801 ; wgs: long \u201c 24.9419037 . Codebox 8 - Latitude and Longitude of a Place","title":"Longitude &amp; Latitude"}]}